dnl configure.in for uhinv. run this through autoconf to produce
dnl a ./configure script (it's best to use autogen.sh)

dnl -- STANDARD THINGS --

AC_INIT(src/annodir.cc)
AC_CONFIG_AUX_DIR(config)
AM_INIT_AUTOMAKE(annodir, 0.1)

dnl check for required programs
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB

dnl check for standard headers
AC_HEADER_STDC

dnl -- REQUIRED --

echo "--- checking for required things ---"
AC_FUNC_STRFTIME(,
    [AC_MSG_ERROR([strftime is required])])
AC_HEADER_DIRENT(,
    [AC_MSG_ERROR([dirent.h is required])])
AC_CHECK_HEADERS(unistd.h,,
    [AC_MSG_ERROR([unistd.h is required])])
AC_CHECK_FUNCS(strerror,,
    [AC_MSG_ERROR([strerror is required])])
AC_CHECK_FUNCS(strtol,,
    [AC_MSG_ERROR([strtol is required])])
AC_CHECK_FUNCS(asprintf,,
    [AC_CHECK_FUNCS(snprintf,,
    [AC_MSG_ERROR([either asprintf or snprintf is required])])])

unset tcap
AC_CHECK_HEADERS(readline/readline.h, ,
    [AC_MSG_ERROR([readline/readline.h is required])])
AC_CHECK_LIB(ncurses, tputs, [tcap="$tcap -lncurses"])
AC_CHECK_LIB(readline, readline, [READLINE_LIBS="-lreadline $tcap"], , $tcap)
if test -z "$READLINE_LIBS" ; then
    AC_MSG_ERROR([need a working readline])
fi
AC_SUBST(READLINE_LIBS)

echo "--- checking for optional things ---"
AC_CHECK_HEADERS(getopt.h)
AC_CHECK_FUNCS(getopt_long)

echo "--- done with checks ---"

dnl output
AM_CONFIG_HEADER(config.h)
AC_OUTPUT(Makefile src/Makefile)
